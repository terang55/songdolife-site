name: 매일 부동산 데이터 자동 수집

on:
  schedule:
    # 매일 오전 6시 (KST) = UTC 21:00 (전날) - 스크립트 내부에서 KST 기준으로 날짜 계산
    - cron: '0 21 * * *'
  workflow_dispatch: # 수동 실행 가능

jobs:
  collect-realestate-data:
    runs-on: ubuntu-latest
    
    # GitHub Actions의 권한 설정
    permissions:
      contents: write        # 레포지토리 콘텐츠 쓰기 권한
      actions: read         # Actions 읽기 권한
    
    steps:
    - name: 코드 체크아웃
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        persist-credentials: true
    
    - name: Node.js 20 설정
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: 의존성 설치
      run: |
        cd frontend
        npm install
    
    - name: 부동산 데이터 수집
      run: |
        cd frontend
        node scripts/collect-daily-realestate.js
    
    - name: Git 설정
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions Bot"
    
    - name: 변경사항 확인 및 커밋
      run: |
        # 한국시간(KST) 기준으로 날짜 계산
        TODAY=$(TZ='Asia/Seoul' date +%Y-%m-%d)
        TARGET_FILE="frontend/public/data/realestate_${TODAY}.json"
        
        echo "🔍 오늘 날짜 파일 확인: ${TARGET_FILE}"
        
        # 오늘 날짜 파일이 존재하는지 확인
        if [ -f "${TARGET_FILE}" ]; then
          echo "📁 파일 존재 확인됨: ${TARGET_FILE}"
          
          # Git에 추가되지 않은 파일인지 확인 (새로 생성된 파일)
          if ! git ls-files --error-unmatch "${TARGET_FILE}" >/dev/null 2>&1; then
            echo "🆕 새로운 부동산 데이터 파일 발견"
            echo "📊 파일 정보:"
            ls -lh "${TARGET_FILE}"
            
            # Git에 추가하고 커밋
            git add "${TARGET_FILE}"
            git commit -m "🏠 자동 부동산 데이터 업데이트: ${TODAY}"
            git push origin main
            echo "✅ 부동산 데이터 자동 수집 및 커밋 완료"
            
          else
            echo "📝 기존 파일이므로 변경사항 확인"
            # 기존 파일의 변경사항이 있는지 확인
            if ! git diff --quiet HEAD -- "${TARGET_FILE}"; then
              echo "🔄 기존 파일에 변경사항 발견"
              git add "${TARGET_FILE}"
              git commit -m "🔄 부동산 데이터 업데이트: ${TODAY}"
              git push origin main
              echo "✅ 부동산 데이터 업데이트 및 커밋 완료"
            else
              echo "📊 데이터 변경사항 없음 - 커밋 건너뜀"
            fi
          fi
          
        else
          echo "❌ 오늘 날짜 데이터 파일이 생성되지 않았습니다"
          echo "🔍 디버깅: 데이터 폴더 내용 확인"
          ls -la frontend/public/data/ || echo "데이터 폴더가 존재하지 않습니다"
          exit 1
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 수집 결과 요약
      run: |
        # 한국시간(KST) 기준으로 날짜 계산
        TODAY=$(TZ='Asia/Seoul' date +%Y-%m-%d)
        YESTERDAY=$(TZ='Asia/Seoul' date -d "yesterday" +%Y-%m-%d)
        
        if [ -f "frontend/public/data/realestate_${TODAY}.json" ]; then
          echo "🎉 ===== 부동산 데이터 수집 완료 ====="
          echo "📅 수집 날짜: ${TODAY}"
          echo "📊 수집된 데이터 파일: realestate_${TODAY}.json"
          echo "📈 파일 크기: $(du -h frontend/public/data/realestate_${TODAY}.json | cut -f1)"
          
          # 오늘 데이터 분석
          TODAY_TOTAL=$(cat frontend/public/data/realestate_${TODAY}.json | jq '.total_count // 0')
          echo "🏠 오늘 총 거래 건수: ${TODAY_TOTAL}건"
          
          # 데이터 품질 검증
          UNIQUE_ID_COUNT=$(cat frontend/public/data/realestate_${TODAY}.json | jq '[.deals[]? | select(.unique_id != null and .unique_id != "")] | length')
          echo "🔑 unique_id 생성된 거래: ${UNIQUE_ID_COUNT}건"
          
          if [ "$UNIQUE_ID_COUNT" -eq "$TODAY_TOTAL" ]; then
            echo "✅ 데이터 품질: 모든 거래에 unique_id 생성됨"
          else
            echo "⚠️  데이터 품질 경고: unique_id 누락된 거래 $((TODAY_TOTAL - UNIQUE_ID_COUNT))건"
          fi
          
          # 어제 데이터와 비교 (신규 거래 예상 건수)
          if [ -f "frontend/public/data/realestate_${YESTERDAY}.json" ]; then
            YESTERDAY_TOTAL=$(cat frontend/public/data/realestate_${YESTERDAY}.json | jq '.total_count // 0')
            NEW_DEALS_ESTIMATE=$((TODAY_TOTAL - YESTERDAY_TOTAL))
            echo ""
            echo "📈 === 일별 변화 분석 ==="
            echo "📊 어제(${YESTERDAY}) 거래: ${YESTERDAY_TOTAL}건"
            echo "📊 오늘(${TODAY}) 거래: ${TODAY_TOTAL}건"
            echo "🆕 예상 신규 거래: ${NEW_DEALS_ESTIMATE}건 (중복 제거 후 실제 신규는 다를 수 있음)"
            
            if [ "$NEW_DEALS_ESTIMATE" -gt 50 ]; then
              echo "⚠️  경고: 신규 거래가 50건을 초과합니다. 데이터를 확인해주세요."
            elif [ "$NEW_DEALS_ESTIMATE" -lt 0 ]; then
              echo "⚠️  경고: 어제보다 거래가 감소했습니다. 데이터를 확인해주세요."
            else
              echo "✅ 정상적인 신규 거래 범위입니다."
            fi
          else
            echo "📝 어제 데이터 파일(${YESTERDAY})이 없어 비교할 수 없습니다."
          fi
          
          echo ""
          echo "🎯 === 추가 정보 ==="
          echo "🔄 중복 제거: 스크립트에서 자동 적용됨"
          echo "🔗 신규 거래 확인: /api/realestate?checkNew=true"
          echo "✅ 부동산 데이터 자동 수집 성공"
          
        else
          echo "❌ 데이터 파일이 생성되지 않았습니다: realestate_${TODAY}.json"
          echo "🔍 디버깅 정보:"
          echo "   - 현재 디렉토리: $(pwd)"
          echo "   - 데이터 폴더 내용: $(ls -la frontend/public/data/ 2>/dev/null || echo '데이터 폴더 없음')"
          echo "   - 오늘 날짜(KST): ${TODAY}"
          exit 1
        fi